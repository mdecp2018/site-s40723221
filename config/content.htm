<h1>每周進度</h1><h2>Week1</h2><h4><span>機械設計一乙40723221邱正宇</span></h4><h4><span>上課須要用到筆記本和隨身碟，並且隨時記錄上課時的重點，期末時自己評分。</span></h4><h4><span>上課需要用到<a href="http://mde.tw/#/">mde.tw</a></span></h4><h4>github:&nbsp;<a href="https://github.com/">https://github.com/</a></h4><h2>week2</h2><h4>使用SHAREX的心得:&nbsp; 使用SHAREX真的十分的方便，在錄製時使用ctrl和print scr鍵就可以控制開始錄製和結束錄製，在找尋錄製完成檔案時也非常的方便。</h4><h4><iframe width="560" height="314" src="//www.youtube.com/embed/zeoDkaU8Gxk" allowfullscreen="allowfullscreen" data-mce-fragment="1"></iframe></h4><h2>week3</h2><p><img src="/images/DSC_0432.JPG" width="255" height="191" alt=""><img src="/images/DSC_0433.JPG" width="255" height="191" alt=""></p><p>git指令能夠有效發揮在工程之中，例如:當某一部分作業失敗時，能夠藉由git log 看到版本，並且藉由git checkout喚回原先之版本，使得在加工時的成本更低，在每一項工作項目中只要打上git add在打上git commit -m"文字"就能夠在所在的項目中做增加的動作，使其之後可以換回原先的版本。</p><h2>week4</h2><p>windows7生命週期的結束也迎來了windows10的興盛，windows7再過了<span>&nbsp;2020 年 1 月 14日之後就無法再更新，這也意味著安全性沒有保障，在網路中存在的病毒日日都在更新，windows的更新程度若沒有更上會導致資料外洩的危險，這就是適時更新版本重要性的一項非常重要的重點。</span></p><h2>week5</h2><p>以<span>&nbsp;</span><a href="http://www.leoeditor.com/">Leo Editor</a><span>&nbsp;</span>開啟 config/pelican.leo&nbsp;</p><p>各分組必須自行更改&nbsp;@edit pelicanconf.py 中的 AUTHOR 與 SITENAME</p><p>更改 @edit publishconf.py 中的 SITEURL</p><p><iframe width="560" height="314" src="//www.youtube.com/embed/3MgUkv3XsUI" allowfullscreen="allowfullscreen"></iframe></p><h2>week6</h2><p>在近端中改版並且推向遠端，在github中查詢改版的資料都可以使用命令列中的git基本指令達到所需要的效果。</p><p><iframe width="560" height="314" src="//www.youtube.com/embed/XYYGYktMO30" allowfullscreen="allowfullscreen"></iframe></p><h2>week7</h2><p><iframe width="560" height="314" src="//www.youtube.com/embed/l-DZNyTKFis" allowfullscreen="allowfullscreen"></iframe></p><p>如何去開啟編輯網誌的檔案和開啟遠端的方式。</p><h2>week8</h2><p>這周github發生了問題無法開啟產生push至遠端後資料消失之情況，所以我們更換使用了fossil，fossil類似於小型之github但是功能更加的強大和齊全也是一個發散是版本控制系統的新選擇。{fossil之簡介如下圖}</p><ul><li>fossil官方網站：<a href="https://www.fossil-scm.org/index.html/doc/trunk/www/index.wiki" target="_blank" rel="noopener">https://www.fossil-scm.org/index.html/doc/trunk/www/index.wiki</a></li></ul><h2>week11</h2><p>eric6之操作:由學長指導如何將eric6之進度條與github結合。</p><p><img src="/images/1.jpg" width="316" height="160" alt=""></p><p>何謂eric6:</p><p>Eric6是Python编程语言的IDE程序，功能之强大，绝不输於Python平台下的任何IDE程序，占用内存低運行速度快足以令Eric6藐視群雄，最可贵的是與PyQt5结合的更是天衣无缝，简直就是开发GUI程序的绝配。</p><p>PyQt5是赖以Python编程语言的外部GUI開發語言，其夯實的底層基礎與强大的可視化界面設計讓PyQt5成为Python语言GUI開發的佼佼者，更新速度之快，开发GUI程序的速度之快，可以说其它GUI開發语言所望塵莫及。</p><p>雖说Eric6與PyQt5结合使用可快速開發GUI程序，但是對PyQt5基礎语言一竅不通也只能是望梅止渴了。所以，要想真正的發揮Eric6与PyQt5结合的優勢，多學一些PyQt5基礎语言是有必要的。</p><p>學PyQt5基礎语言當然要用Eric6了，不说Eric6的强大優勢，至少用Eric6来學可以在學習期间让我们對他熟悉，為以後结合PyQt5使用墊下基礎。</p><p>eric6<span>操作參考網址:</span><a href="https://blog.csdn.net/TST_STUDIO/article/details/78235468">https://blog.csdn.net/TST_STUDIO/article/details/78235468</a></p><h2>week12</h2><p>本周在思考關於我們所要使用作遊戲的軟體以下列出幾項優缺點放在組別報告中:</p><p>python:</p><p>由嚴老師給予之kmolgame然後以cmsimly編輯並用brython的語法並且以kmolgame為框架並且做改變達到我們想要的效果。</p><p>pygame</p><p>由python所延伸出的一款模組，其中有物理引擎，能夠使我們更容易去操作某部分必須要擬真的物件。</p><p><span><strong>Unity3D</strong></span><br><span>Unity3D具有其他引擎難以匹敵的用戶量而且你只需要付費一次，這對於很多開發商來說當然是非常具有吸引力。</span></p><p><span><strong>虛幻引擎</strong><br>數年以來，虛幻引擎一直是做高端EA遊戲最受歡迎的引擎。《戰爭機器》、《蝙蝠俠：阿卡漢姆瘋人院》(Batman: Arkham Asylum)、《質量效應》以及很多大作都是出自該引擎之手。</span></p><p><span><strong>CryEngine 3</strong><br>該遊戲引擎以優質的畫面輸出獲得了大量開發者認可，如果你要做視覺出色的遊戲，這款引擎絕對是最理想的選擇。不過，該引擎也有自己的問題。</span></p><p><span><strong>HeroEngine</strong><br>該引擎在MMO和在線遊戲領域獲得了非常高的人氣，代表作《星球大戰：舊共和國》。對於新入行的開發者以及初創公司來說，授權費用較高，不過，如果你有一個非常具備潛力的項目，該引擎還是非常值得考慮的。</span></p><p><strong><span>Rage Engine</span></strong></p><p><span>該引擎的用途非常多，比較知名的遊戲包括GTA Ⅲ、GTA：Vice City、GTA：San Andreas和很多知名大作。</span></p><p><strong><span>Project Anarchy</span></strong></p><p><span>該引擎是一套完整的端到端遊戲引擎和尖端移動設備工具組，受到很多遊戲開發者讚譽，但同樣具有一些缺點。</span></p><p><span><strong>GameSalad</strong><br>這款引擎據說是不用寫代碼就能做遊戲。這並不是個噱頭，該引擎的確支持這樣的功能。不過GameSalad一些功能也並不好用。</span></p><p><span><strong>GameMaker：Studio</strong><br>作為開發者，如果你想要一款簡單而又快速直接的遊戲引擎開始項目，那麼GameMaker：Studio絕對是理想之選；儘管授權費有些貴，但能夠獲得的功能還是物有所值的</span></p><p><span><strong>App Game Kit</strong><br>該引擎是真正的跨平台研發工具，非常易用、簡單，而且比較靈活。</span></p><p><span><strong>Cocos2D</strong><br>很多策劃認為Cocos2D對於新入行的開發者來說不僅具備大量功能，而且非常容易上手。雖然該引擎比較複雜，但值得一提的是其功能和靈活性。</span></p><h2>week13</h2><p><span>python遊戲範例和開啟方式:</span></p><p><span>由嚴老師給予之kmolgame所做出之簡單的改動，內容大致上為使用語法使球能夠碰到myapp之邊框時能夠向下移動並且回彈。</span></p><p><span><iframe width="560" height="314" src="//www.youtube.com/embed/XSFt2rXHEk8" allowfullscreen="allowfullscreen"></iframe></span></p><h2>week14</h2><p><span>本周進度和如何改變password。</span></p><p><span>本周加入的元素為重力加速度，球能夠藉由此公式達到重力加速度的效果，因為導入了時間的指令time=time()故能夠使重力加速度Vo=Vot+0.5at*t計算出我們所需要的值。</span></p><p><span><iframe width="560" height="314" src="//www.youtube.com/embed/DUQ1xcQIOl8" allowfullscreen="allowfullscreen"></iframe></span></p><h1>git 基本操作</h1><p>git push之前必須要先做前置的設定，使用cd從資料夾之中叫出所需要推上的資料夾</p><p>(cd選擇資料夾)在使用git add .將加入的東西加入(git add .加入物件)再用git commit -m "add s40723221 on title"提交(git commit -m "add s40723221 ")最後就能使用git push將資料推上。</p><p>c:將資料夾切換至C槽</p><p>cd/更換治所需之根目錄</p><p>mkdir test 建立名為test 之資料夾</p><p>git init 將test起始為git的倉儲</p><p>git log查詢所有版本</p><p>git checkout+版本碼可以導回此版本</p><h1>期末報告成品與解說</h1><h2>期末專題製作概要</h2><p><img src="/images/a.PNG" width="1065" height="1070" alt=""></p><p></p><p></p>